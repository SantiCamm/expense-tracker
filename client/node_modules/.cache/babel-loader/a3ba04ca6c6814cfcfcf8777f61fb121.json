{"ast":null,"code":"import _toConsumableArray from\"/home/santiago/React/expense-tracker/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/santiago/React/expense-tracker/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// The reducer handles state changes in response to certain actions\nvar reducer=function reducer(state,action){switch(action.type){// Return all the fetched transactions with the axios request\ncase\"GET_TRANSACTIONS\":return _objectSpread(_objectSpread({},state),{},{isLoading:false,transactions:action.payload});// Return a new array with the recently added transaction\ncase\"ADD_TRANSACTION\":return _objectSpread(_objectSpread({},state),{},{transactions:[].concat(_toConsumableArray(state.transactions),[action.payload]),error:null});// Filter the transactions to get a new array without the deleted transaction\ncase\"DELETE_TRANSACTION\":return _objectSpread(_objectSpread({},state),{},{transactions:state.transactions.filter(function(transaction){return transaction._id!==action.payload;})});// Return the error from the server\ncase\"TRANSACTION_ERROR\":return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/context/AppReducer.jsx"],"names":["reducer","state","action","type","isLoading","transactions","payload","error","filter","transaction","_id"],"mappings":"yQAAA;AACA,GAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACjC,OAAQA,MAAM,CAACC,IAAf,EAEE;AACA,IAAK,kBAAL,CACE,sCACKF,KADL,MAEEG,SAAS,CAAE,KAFb,CAGEC,YAAY,CAAEH,MAAM,CAACI,OAHvB,GAMF;AACA,IAAK,iBAAL,CACE,sCACKL,KADL,MAEEI,YAAY,8BAAMJ,KAAK,CAACI,YAAZ,GAA0BH,MAAM,CAACI,OAAjC,EAFd,CAGEC,KAAK,CAAE,IAHT,GAMF;AACA,IAAK,oBAAL,CACE,sCACKN,KADL,MAEEI,YAAY,CAAEJ,KAAK,CAACI,YAAN,CAAmBG,MAAnB,CACZ,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACC,GAAZ,GAAoBR,MAAM,CAACI,OAA5C,EADY,CAFhB,GAOF;AACA,IAAK,mBAAL,CACE,sCACKL,KADL,MAEEM,KAAK,CAAEL,MAAM,CAACI,OAFhB,GAMF,QACE,MAAOL,CAAAA,KAAP,CApCJ,CAsCD,CAvCD,CAyCA,cAAeD,CAAAA,OAAf","sourcesContent":["// The reducer handles state changes in response to certain actions\nconst reducer = (state, action) => {\n  switch (action.type) {\n\n    // Return all the fetched transactions with the axios request\n    case \"GET_TRANSACTIONS\":\n      return {\n        ...state,\n        isLoading: false,\n        transactions: action.payload,\n      };\n\n    // Return a new array with the recently added transaction\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload],\n        error: null,\n      };\n\n    // Filter the transactions to get a new array without the deleted transaction\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction._id !== action.payload\n        ),\n      };\n\n    // Return the error from the server\n    case \"TRANSACTION_ERROR\":\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    \n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}