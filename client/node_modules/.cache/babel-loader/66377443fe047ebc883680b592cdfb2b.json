{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/expense-tracker/client/src/context/GlobalState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transactions: [],\n  error: null,\n  isLoading: true\n}; // Create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); // Create provider for other components to access state, actions, etc\n\nexport const GlobalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // Reducer takes our own reducer and an initial piece of state\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get(\"/expensetracker/transactions/\");\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`expensetracker/transactions/${id}`);\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.post(\"expensetracker/transactions/\", transaction, config);\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: res.data.data\n      });\n    } catch (error) {}\n  } // Return the Provider so that we can access it\n  // {children} will be our components wrapped inside the Provider. In this case, everything in App.js\n\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      isLoading: state.isLoading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/context/GlobalState.jsx"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","isLoading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC;;AAEA,iBAAeS,eAAf,GAAiC;AAC/B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,+BAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOZ,KAAP,EAAc;AACdM,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEX,KAAK,CAACa,QAAN,CAAeD,IAAf,CAAoBZ;AAFtB,OAAD,CAAR;AAID;AACF;;AAED,iBAAec,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF,YAAMlB,KAAK,CAACmB,MAAN,CAAc,+BAA8BD,EAAG,EAA/C,CAAN;AACAT,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAEI;AAFF,OAAD,CAAR;AAID,KAND,CAME,OAAOf,KAAP,EAAc;AACdM,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEX,KAAK,CAACa,QAAN,CAAeD,IAAf,CAAoBZ;AAFtB,OAAD,CAAR;AAID;AACF;;AAED,iBAAeiB,cAAf,CAA8BC,WAA9B,EAA2C;AACzC,QAAI;AACF,YAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf;AAKA,YAAMZ,GAAG,GAAG,MAAMX,KAAK,CAACwB,IAAN,CAAW,8BAAX,EAA2CH,WAA3C,EAAwDC,MAAxD,CAAlB;AAEAb,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAZD,CAYE,OAAOZ,KAAP,EAAc,CAEf;AACF,GAlD6C,CAoD9C;AACA;;;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADf;AAELC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFR;AAGLC,MAAAA,SAAS,EAAEI,KAAK,CAACJ,SAHZ;AAILM,MAAAA,eAJK;AAKLO,MAAAA,iBALK;AAMLG,MAAAA;AANK,KADT;AAAA,cAUGb;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApEM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  isLoading: true,\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Create provider for other components to access state, actions, etc\nexport const GlobalProvider = ({ children }) => {\n  // Reducer takes our own reducer and an initial piece of state\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get(\"/expensetracker/transactions/\");\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: error.response.data.error,\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`expensetracker/transactions/${id}`);\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: error.response.data.error,\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      const res = await axios.post(\"expensetracker/transactions/\", transaction, config);\n\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: res.data.data,\n      });\n    } catch (error) {\n      \n    }\n  }\n\n  // Return the Provider so that we can access it\n  // {children} will be our components wrapped inside the Provider. In this case, everything in App.js\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        error: state.error,\n        isLoading: state.isLoading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}