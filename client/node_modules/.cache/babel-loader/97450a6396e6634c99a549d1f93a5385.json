{"ast":null,"code":"import _slicedToArray from\"/home/santiago/React/expense-tracker/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState}from\"react\";import{GlobalContext}from\"../../context/GlobalState\";import{Title,Error,Form,FormControl,Input,Label,TransactionButton}from\"./NewTransactionFormElements\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NewTransactionForm=function NewTransactionForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useContext=useContext(GlobalContext),addTransaction=_useContext.addTransaction,error=_useContext.error;var submitTransaction=function submitTransaction(e){e.preventDefault();addTransaction({id:Math.floor(Math.random()*1000000),text:text,amount:+amount});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Title,{children:\"Add new transaction\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitTransaction,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"text\",children:\"Income/Expense\"}),/*#__PURE__*/_jsx(Input,{required:true,type:\"text\",placeholder:\"Enter text...\",value:text,onChange:function onChange(e){setText(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Label,{htmlFor:\"amount\",children:[\"Amount \",/*#__PURE__*/_jsx(\"br\",{}),\"(negative - expense, positive - income)\"]}),/*#__PURE__*/_jsx(Input,{required:true,type:\"number\",placeholder:\"Enter amount...\",value:amount,onChange:function onChange(e){setAmount(e.target.value);}})]}),/*#__PURE__*/_jsx(TransactionButton,{children:\"Add transaction\"})]}),error&&/*#__PURE__*/_jsx(Error,{children:error})]});};export default NewTransactionForm;","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/components/NewTransactionForm/index.js"],"names":["React","useContext","useState","GlobalContext","Title","Error","Form","FormControl","Input","Label","TransactionButton","NewTransactionForm","text","setText","amount","setAmount","addTransaction","error","submitTransaction","e","preventDefault","id","Math","floor","random","target","value"],"mappings":"iIAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,2BAA9B,CAEA,OACEC,KADF,CAEEC,KAFF,CAGEC,IAHF,CAIEC,WAJF,CAKEC,KALF,CAMEC,KANF,CAOEC,iBAPF,KAQO,8BARP,C,6IAUA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,cAAwBT,QAAQ,CAAC,EAAD,CAAhC,wCAAOU,IAAP,eAAaC,OAAb,eACA,eAA4BX,QAAQ,CAAC,CAAD,CAApC,yCAAOY,MAAP,eAAeC,SAAf,eACA,gBAAkCd,UAAU,CAACE,aAAD,CAA5C,CAAQa,cAAR,aAAQA,cAAR,CAAwBC,KAAxB,aAAwBA,KAAxB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/BA,CAAC,CAACC,cAAF,GACAJ,cAAc,CAAC,CACbK,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,OAA3B,CADS,CAEbZ,IAAI,CAAJA,IAFa,CAGbE,MAAM,CAAE,CAACA,MAHI,CAAD,CAAd,CAKD,CAPD,CAQA,mBACE,wCACE,KAAC,KAAD,kCADF,cAEE,cAAM,QAAQ,CAAEI,iBAAhB,wBACE,oCACE,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,4BADF,cAEE,KAAC,KAAD,EACE,QAAQ,KADV,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,eAHd,CAIE,KAAK,CAAEN,IAJT,CAKE,QAAQ,CAAE,kBAACO,CAAD,CAAO,CACfN,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAAP,CACD,CAPH,EAFF,GADF,cAaE,oCACE,MAAC,KAAD,EAAO,OAAO,CAAC,QAAf,kCACS,aADT,6CADF,cAKE,KAAC,KAAD,EACE,QAAQ,KADV,CAEE,IAAI,CAAC,QAFP,CAGE,WAAW,CAAC,iBAHd,CAIE,KAAK,CAAEZ,MAJT,CAKE,QAAQ,CAAE,kBAACK,CAAD,CAAO,CACfJ,SAAS,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAT,CACD,CAPH,EALF,GAbF,cA4BE,KAAC,iBAAD,8BA5BF,GAFF,CAiCGT,KAAK,eAAI,KAAC,KAAD,WAAQA,KAAR,EAjCZ,GADF,CAqCD,CAlDD,CAoDA,cAAeN,CAAAA,kBAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nimport {\n  Title,\n  Error,\n  Form,\n  FormControl,\n  Input,\n  Label,\n  TransactionButton,\n} from \"./NewTransactionFormElements\";\n\nconst NewTransactionForm = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const { addTransaction, error } = useContext(GlobalContext);\n\n  const submitTransaction = (e) => {\n    e.preventDefault();\n    addTransaction({\n      id: Math.floor(Math.random() * 1000000),\n      text,\n      amount: +amount,\n    });\n  };\n  return (\n    <>\n      <Title>Add new transaction</Title>\n      <form onSubmit={submitTransaction}>\n        <div>\n          <Label htmlFor=\"text\">Income/Expense</Label>\n          <Input\n            required\n            type=\"text\"\n            placeholder=\"Enter text...\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </Label>\n          <Input\n            required\n            type=\"number\"\n            placeholder=\"Enter amount...\"\n            value={amount}\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          />\n        </div>\n        <TransactionButton>Add transaction</TransactionButton>\n      </form>\n\n      {error && <Error>{error}</Error>}\n    </>\n  );\n};\n\nexport default NewTransactionForm;\n"]},"metadata":{},"sourceType":"module"}