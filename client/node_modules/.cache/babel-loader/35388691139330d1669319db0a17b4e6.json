{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/expense-tracker/client/src/components/NewTransactionForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewTransactionForm = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const {\n    addTransaction,\n    error\n  } = useContext(GlobalContext);\n\n  const submitTransaction = e => {\n    e.preventDefault();\n    addTransaction({\n      id: Math.floor(Math.random() * 1000000),\n      text,\n      amount: +amount\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter text...\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 20\n          }, this), \"(negative - expense, positive - income)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter amount...\",\n          value: amount,\n          onChange: e => {\n            setAmount(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewTransactionForm, \"BVcBDMC/5Iz2v5SXnC15bjvDjSs=\");\n\n_c = NewTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransactionForm\");","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/components/NewTransactionForm.jsx"],"names":["React","useContext","useState","GlobalContext","NewTransactionForm","text","setText","amount","setAmount","addTransaction","error","submitTransaction","e","preventDefault","id","Math","floor","random","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAEO,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA4BT,UAAU,CAACE,aAAD,CAA5C;;AAEA,QAAMQ,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,cAAc,CAAC;AACbK,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CADS;AAEbZ,MAAAA,IAFa;AAGbE,MAAAA,MAAM,EAAE,CAACA;AAHI,KAAD,CAAd;AAKD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEI,iBAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,eAHd;AAIE,UAAA,KAAK,EAAEN,IAJT;AAKE,UAAA,QAAQ,EAAGO,CAAD,IAAO;AACfN,YAAAA,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAAP;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,6CACS;AAAA;AAAA;AAAA;AAAA,kBADT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,iBAHd;AAIE,UAAA,KAAK,EAAEZ,MAJT;AAKE,UAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,YAAAA,SAAS,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAT;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eA4BE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAiCGT,KAAK,iBAAK;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAjCb;AAAA,kBADF;AAqCD,CAnDM;;GAAMN,kB;;KAAAA,kB","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const NewTransactionForm = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const { addTransaction, error } = useContext(GlobalContext);\n\n  const submitTransaction = (e) => {\n    e.preventDefault();\n    addTransaction({\n      id: Math.floor(Math.random() * 1000000),\n      text,\n      amount: +amount,\n    });\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={submitTransaction}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            required\n            type=\"text\"\n            placeholder=\"Enter text...\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            required\n            type=\"number\"\n            placeholder=\"Enter amount...\"\n            value={amount}\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n\n      {error && (<h2>{error}</h2>)}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}