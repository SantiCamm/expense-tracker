{"ast":null,"code":"import _asyncToGenerator from\"/home/santiago/React/expense-tracker/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/santiago/React/expense-tracker/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/santiago/React/expense-tracker/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{createContext,useReducer}from\"react\";import TransactionsReducer from\"./GlobalReducer\";import*as api from\"../api\";// Default state\nimport{jsx as _jsx}from\"react/jsx-runtime\";var initialState={transactions:[],error:null,isLoading:true,auth:{error:null,authData:null,success:null}};// Create context\nexport var GlobalContext=/*#__PURE__*/createContext(initialState);// Create provider for other components to access state, actions, etc\n// Children will be the components wrapped inside the GlobalProvider\nexport var GlobalProvider=function GlobalProvider(_ref){var children=_ref.children;// Reducer takes our own reducer and an initial piece of state\nvar _useReducer=useReducer(TransactionsReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// ACTIONS\n// Async since we are waiting for the api response\nfunction logout(navigate){dispatch({type:\"LOGOUT\"});navigate(\"/login\");};function googleLogin(_x,_x2){return _googleLogin.apply(this,arguments);}function _googleLogin(){_googleLogin=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res,navigate){var googleUserData,token,serverResponse,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:googleUserData=res.result,token=res.token;_context.prev=1;_context.next=4;return api.googleLogin({token:token});case 4:serverResponse=_context.sent;data=serverResponse.data;dispatch({type:\"LOGIN\",payload:{googleUserData:googleUserData,data:data}});navigate(\"/\");_context.next=12;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return _googleLogin.apply(this,arguments);}function getTransactions(){return _getTransactions.apply(this,arguments);}function _getTransactions(){_getTransactions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var transactions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.fetchTransactions();case 3:transactions=_context2.sent;// Dispatch an action to the reducer with the fetched data\ndispatch({type:\"GET_TRANSACTIONS\",payload:transactions.data.data});_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);dispatch({type:\"TRANSACTION_ERROR\",payload:_context2.t0.response.data.error});case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return _getTransactions.apply(this,arguments);}function addTransaction(_x3){return _addTransaction.apply(this,arguments);}function _addTransaction(){_addTransaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transaction){var config,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;// Config to make a POST request with axios (headers)\nconfig={headers:{\"Content-Type\":\"application/json\"}};// Axios request\n_context3.next=4;return api.addTransaction(transaction,config);case 4:res=_context3.sent;// Dispatch an action with the response data. In this case, the recently added transaction\ndispatch({type:\"ADD_TRANSACTION\",payload:res.data.data});_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);dispatch({type:\"TRANSACTION_ERROR\",payload:_context3.t0.response.data.message});case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return _addTransaction.apply(this,arguments);}function deleteTransaction(_x4){return _deleteTransaction.apply(this,arguments);}// Return the Provider so that we can access it\nfunction _deleteTransaction(){_deleteTransaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return api.deleteTransaction(id);case 3:dispatch({type:\"DELETE_TRANSACTION\",payload:id});_context4.next=9;break;case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);dispatch({type:\"TRANSACTION_ERROR\",payload:_context4.t0.response.data.error});case 9:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _deleteTransaction.apply(this,arguments);}return/*#__PURE__*/_jsx(GlobalContext.Provider,{value:{transactions:state.transactions,error:state.error,isLoading:state.isLoading,auth:state.auth,getTransactions:getTransactions,deleteTransaction:deleteTransaction,addTransaction:addTransaction,googleLogin:googleLogin,logout:logout},children:children});};","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/context/GlobalState.jsx"],"names":["React","createContext","useReducer","TransactionsReducer","api","initialState","transactions","error","isLoading","auth","authData","success","GlobalContext","GlobalProvider","children","state","dispatch","logout","navigate","type","googleLogin","res","googleUserData","result","token","serverResponse","data","payload","getTransactions","fetchTransactions","response","addTransaction","transaction","config","headers","message","deleteTransaction","id"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport TransactionsReducer from \"./GlobalReducer\";\nimport * as api from \"../api\";\n\n// Default state\nconst initialState = {\n  transactions: [],\n  error: null,\n  isLoading: true,\n  auth: { error: null, authData: null, success: null },\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Create provider for other components to access state, actions, etc\n// Children will be the components wrapped inside the GlobalProvider\nexport const GlobalProvider = ({ children }) => {\n  // Reducer takes our own reducer and an initial piece of state\n  const [state, dispatch] = useReducer(TransactionsReducer, initialState);\n\n  // ACTIONS\n  // Async since we are waiting for the api response\n  function logout(navigate) {\n    dispatch({\n      type: \"LOGOUT\",\n    });\n    navigate(\"/login\");\n  };\n\n\n  async function googleLogin(res, navigate) {\n    const { result: googleUserData, token } = res;\n    try {\n      const serverResponse = await api.googleLogin({ token });\n      const data = serverResponse.data;\n      \n      dispatch({\n        type: \"LOGIN\",\n        payload: {googleUserData, data},\n      });\n      navigate(\"/\");\n    } catch (error) {}\n  }\n\n  async function getTransactions() {\n    try {\n      // Make the api call with axios\n      const transactions = await api.fetchTransactions();\n\n      // Dispatch an action to the reducer with the fetched data\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: transactions.data.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: error.response.data.error,\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    try {\n      // Config to make a POST request with axios (headers)\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      // Axios request\n      const res = await api.addTransaction(transaction, config);\n\n      // Dispatch an action with the response data. In this case, the recently added transaction\n      dispatch({\n        type: \"ADD_TRANSACTION\",\n        payload: res.data.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: error.response.data.message,\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await api.deleteTransaction(id);\n\n      dispatch({\n        type: \"DELETE_TRANSACTION\",\n        payload: id,\n      });\n    } catch (error) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: error.response.data.error,\n      });\n    }\n  }\n\n  // Return the Provider so that we can access it\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        error: state.error,\n        isLoading: state.isLoading,\n        auth: state.auth,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n        googleLogin,\n        logout,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}