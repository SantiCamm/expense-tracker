{"ast":null,"code":"import _slicedToArray from\"/home/santiago/React/expense-tracker/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState}from\"react\";import{GlobalContext}from\"../context/GlobalState\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var NewTransactionForm=function NewTransactionForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useContext=useContext(GlobalContext),addTransaction=_useContext.addTransaction,error=_useContext.error;var submitTransaction=function submitTransaction(e){e.preventDefault();addTransaction({id:Math.floor(Math.random()*1000000),text:text,amount:+amount});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add new transaction\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitTransaction,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"text\",children:\"Text\"}),/*#__PURE__*/_jsx(\"input\",{required:true,type:\"text\",placeholder:\"Enter text...\",value:text,onChange:function onChange(e){setText(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"amount\",children:[\"Amount \",/*#__PURE__*/_jsx(\"br\",{}),\"(negative - expense, positive - income)\"]}),/*#__PURE__*/_jsx(\"input\",{required:true,type:\"number\",placeholder:\"Enter amount...\",value:amount,onChange:function onChange(e){setAmount(e.target.value);}})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",children:\"Add transaction\"})]}),error&&/*#__PURE__*/_jsx(\"h4\",{className:\"error\",children:error})]});};","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/components/NewTransactionForm.jsx"],"names":["React","useContext","useState","GlobalContext","NewTransactionForm","text","setText","amount","setAmount","addTransaction","error","submitTransaction","e","preventDefault","id","Math","floor","random","target","value"],"mappings":"iIAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,aAAT,KAA8B,wBAA9B,C,6IAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,cAAwBF,QAAQ,CAAC,EAAD,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAA4BJ,QAAQ,CAAC,CAAD,CAApC,yCAAOK,MAAP,eAAeC,SAAf,eACA,gBAAkCP,UAAU,CAACE,aAAD,CAA5C,CAAQM,cAAR,aAAQA,cAAR,CAAwBC,KAAxB,aAAwBA,KAAxB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/BA,CAAC,CAACC,cAAF,GACEJ,cAAc,CAAC,CACbK,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,OAA3B,CADS,CAEbZ,IAAI,CAAJA,IAFa,CAGbE,MAAM,CAAE,CAACA,MAHI,CAAD,CAAd,CAKH,CAPD,CASA,mBACE,wCACE,2CADF,cAEE,cAAM,QAAQ,CAAEI,iBAAhB,wBACE,aAAK,SAAS,CAAC,cAAf,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,cACE,QAAQ,KADV,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,eAHd,CAIE,KAAK,CAAEN,IAJT,CAKE,QAAQ,CAAE,kBAACO,CAAD,CAAO,CACfN,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAAP,CACD,CAPH,EAFF,GADF,cAaE,aAAK,SAAS,CAAC,cAAf,wBACE,eAAO,OAAO,CAAC,QAAf,kCACS,aADT,6CADF,cAKE,cACE,QAAQ,KADV,CAEE,IAAI,CAAC,QAFP,CAGE,WAAW,CAAC,iBAHd,CAIE,KAAK,CAAEZ,MAJT,CAKE,QAAQ,CAAE,kBAACK,CAAD,CAAO,CACfJ,SAAS,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAT,CACD,CAPH,EALF,GAbF,cA4BE,eAAQ,SAAS,CAAC,KAAlB,6BA5BF,GAFF,CAiCGT,KAAK,eAAI,WAAI,SAAS,CAAC,OAAd,UAAuBA,KAAvB,EAjCZ,GADF,CAqCD,CAnDM","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const NewTransactionForm = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const { addTransaction, error } = useContext(GlobalContext);\n\n  const submitTransaction = (e) => {\n    e.preventDefault();\n      addTransaction({\n        id: Math.floor(Math.random() * 1000000),\n        text,\n        amount: +amount,\n      });\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={submitTransaction}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            required\n            type=\"text\"\n            placeholder=\"Enter text...\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            required\n            type=\"number\"\n            placeholder=\"Enter amount...\"\n            value={amount}\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n\n      {error && <h4 className=\"error\">{error}</h4>}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}