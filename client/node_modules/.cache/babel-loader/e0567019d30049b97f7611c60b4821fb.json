{"ast":null,"code":"// The reducer handles state changes in response to certain actions\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_TRANSACTIONS\":\n      return { ...state,\n        isLoading: false,\n        transactions: action.payload\n      };\n\n    case \"DELETE_TRANSACTION\":\n      return { ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      };\n\n    case \"ADD_TRANSACTION\":\n      return { ...state,\n        transactions: [action.payload, ...state.transactions]\n      };\n\n    case \"TRANSACTION_ERROR\":\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/context/AppReducer.jsx"],"names":["reducer","state","action","type","isLoading","transactions","payload","filter","transaction","id","error"],"mappings":"AAAA;AAEA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,YAAY,EAAEH,MAAM,CAACI;AAHhB,OAAP;;AAKF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELI,QAAAA,YAAY,EAAEJ,KAAK,CAACI,YAAN,CAAmBE,MAAnB,CACXC,WAAD,IAAiBA,WAAW,CAACC,EAAZ,KAAmBP,MAAM,CAACI,OAD/B;AAFT,OAAP;;AAMF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAEPI,QAAAA,YAAY,EAAE,CAACH,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACI,YAA1B;AAFP,OAAP;;AAIF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELS,QAAAA,KAAK,EAAER,MAAM,CAACI;AAFT,OAAP;;AAIF;AACE,aAAOL,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["// The reducer handles state changes in response to certain actions\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_TRANSACTIONS\":\n      return {\n        ...state,\n        isLoading: false,\n        transactions: action.payload\n      }\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n      transactions: [action.payload, ...state.transactions]\n      };\n    case \"TRANSACTION_ERROR\":\n      return {\n        ...state,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}