{"ast":null,"code":"var _jsxFileName = \"/home/santiago/React/expense-tracker/client/src/components/NewTransactionForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { Title, Error, Form, FormControl, Input, Label, TransactionButton } from \"./NewTransactionFormElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewTransactionForm = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const {\n    addTransaction,\n    error\n  } = useContext(GlobalContext);\n\n  const submitTransaction = e => {\n    e.preventDefault();\n    addTransaction({\n      id: Math.floor(Math.random() * 1000000),\n      text,\n      amount: +amount\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitTransaction,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"text\",\n          children: \"Income/Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter text...\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"amount\",\n          children: [\"Amount \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 20\n          }, this), \"(negative - expense, positive - income)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          required: true,\n          type: \"number\",\n          placeholder: \"Enter amount...\",\n          value: amount,\n          onChange: e => {\n            setAmount(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionButton, {\n        children: \"Add transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      children: [\"$\", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewTransactionForm, \"BVcBDMC/5Iz2v5SXnC15bjvDjSs=\");\n\n_c = NewTransactionForm;\nexport default NewTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransactionForm\");","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/components/NewTransactionForm/index.js"],"names":["React","useContext","useState","GlobalContext","Title","Error","Form","FormControl","Input","Label","TransactionButton","NewTransactionForm","text","setText","amount","setAmount","addTransaction","error","submitTransaction","e","preventDefault","id","Math","floor","random","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,SACEC,KADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,iBAPF,QAQO,8BARP;;;;AAUA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAEc,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA4BhB,UAAU,CAACE,aAAD,CAA5C;;AAEA,QAAMe,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,cAAc,CAAC;AACbK,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CADS;AAEbZ,MAAAA,IAFa;AAGbE,MAAAA,MAAM,EAAE,CAACA;AAHI,KAAD,CAAd;AAKD,GAPD;;AAQA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEI,iBAAhB;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,eAHd;AAIE,UAAA,KAAK,EAAEN,IAJT;AAKE,UAAA,QAAQ,EAAGO,CAAD,IAAO;AACfN,YAAAA,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAAP;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,WAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,6CACS;AAAA;AAAA;AAAA;AAAA,kBADT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,iBAHd;AAIE,UAAA,KAAK,EAAEZ,MAJT;AAKE,UAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,YAAAA,SAAS,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAT;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eA4BE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAiCGT,KAAK,iBAAI,QAAC,KAAD;AAAA,sBAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCZ;AAAA,kBADF;AAqCD,CAlDD;;GAAMN,kB;;KAAAA,kB;AAoDN,eAAeA,kBAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nimport {\n  Title,\n  Error,\n  Form,\n  FormControl,\n  Input,\n  Label,\n  TransactionButton,\n} from \"./NewTransactionFormElements\";\n\nconst NewTransactionForm = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const { addTransaction, error } = useContext(GlobalContext);\n\n  const submitTransaction = (e) => {\n    e.preventDefault();\n    addTransaction({\n      id: Math.floor(Math.random() * 1000000),\n      text,\n      amount: +amount,\n    });\n  };\n  return (\n    <>\n      <Title>Add new transaction</Title>\n      <Form onSubmit={submitTransaction}>\n        <FormControl>\n          <Label htmlFor=\"text\">Income/Expense</Label>\n          <Input\n            required\n            type=\"text\"\n            placeholder=\"Enter text...\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n          />\n        </FormControl>\n        <FormControl>\n          <Label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </Label>\n          <Input\n            required\n            type=\"number\"\n            placeholder=\"Enter amount...\"\n            value={amount}\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          />\n        </FormControl>\n        <TransactionButton>Add transaction</TransactionButton>\n      </Form>\n\n      {error && <Error>${error}</Error>}\n    </>\n  );\n};\n\nexport default NewTransactionForm;\n"]},"metadata":{},"sourceType":"module"}