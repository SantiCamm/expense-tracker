{"ast":null,"code":"// The reducer handles state changes in response to certain actions\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      localStorage.setItem(\"profile\", JSON.stringify({ ...(action === null || action === void 0 ? void 0 : action.data)\n      }));\n      return { ...state,\n        auth: {\n          success: true,\n          authData: action.payload\n        }\n      };\n\n    case \"LOGOUT\":\n      break;\n    // Return all the fetched transactions with the axios request\n\n    case \"GET_TRANSACTIONS\":\n      return { ...state,\n        isLoading: false,\n        transactions: action.payload\n      };\n    // Return a new array with the recently added transaction\n\n    case \"ADD_TRANSACTION\":\n      return { ...state,\n        transactions: [...state.transactions, action.payload],\n        error: null\n      };\n    // Filter the transactions to get a new array without the deleted transaction\n\n    case \"DELETE_TRANSACTION\":\n      return { ...state,\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n      };\n    // Return the error from the server\n\n    case \"TRANSACTION_ERROR\":\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/santiago/React/expense-tracker/client/src/context/TransactionsReducer.jsx"],"names":["reducer","state","action","type","localStorage","setItem","JSON","stringify","data","auth","success","authData","payload","isLoading","transactions","error","filter","transaction","_id"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAK,OAAL;AACEC,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAe,EAAE,IAAGL,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEM,IAAX;AAAF,OAAf,CAAhC;AACA,aAAO,EAAE,GAAGP,KAAL;AAAYQ,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,QAAQ,EAAET,MAAM,CAACU;AAAlC;AAAlB,OAAP;;AAEF,SAAK,QAAL;AACE;AAEF;;AACA,SAAK,kBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELY,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,YAAY,EAAEZ,MAAM,CAACU;AAHhB,OAAP;AAMF;;AACA,SAAK,iBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELa,QAAAA,YAAY,EAAE,CAAC,GAAGb,KAAK,CAACa,YAAV,EAAwBZ,MAAM,CAACU,OAA/B,CAFT;AAGLG,QAAAA,KAAK,EAAE;AAHF,OAAP;AAMF;;AACA,SAAK,oBAAL;AACE,aAAO,EACL,GAAGd,KADE;AAELa,QAAAA,YAAY,EAAEb,KAAK,CAACa,YAAN,CAAmBE,MAAnB,CACXC,WAAD,IAAiBA,WAAW,CAACC,GAAZ,KAAoBhB,MAAM,CAACU,OADhC;AAFT,OAAP;AAOF;;AACA,SAAK,mBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELc,QAAAA,KAAK,EAAEb,MAAM,CAACU;AAFT,OAAP;;AAMF;AACE,aAAOX,KAAP;AA3CJ;AA6CD,CA9CD;;AAgDA,eAAeD,OAAf","sourcesContent":["// The reducer handles state changes in response to certain actions\nconst reducer = (state, action) => {\n  switch (action.type) {\n\n    case \"LOGIN\":\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action?.data }));\n      return { ...state, auth: { success: true, authData: action.payload } };\n\n    case \"LOGOUT\":\n      break;\n\n    // Return all the fetched transactions with the axios request\n    case \"GET_TRANSACTIONS\":\n      return {\n        ...state,\n        isLoading: false,\n        transactions: action.payload,\n      };\n\n    // Return a new array with the recently added transaction\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload],\n        error: null,\n      };\n\n    // Filter the transactions to get a new array without the deleted transaction\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction._id !== action.payload\n        ),\n      };\n\n    // Return the error from the server\n    case \"TRANSACTION_ERROR\":\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    \n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}